#!/usr/bin/env bash

##############################################################
# Bootstrap my work environment
if [[ -d "$HOME/Development" ]]; then
  SQUARE_HOME=$HOME/Development
fi
export SQUARE_HOME
if [[ -f "$SQUARE_HOME/config_files/square/bash_profile" ]]; then
  source $SQUARE_HOME/config_files/square/bash_profile
else
  alias _pair_startup=true
fi
##############################################################


# Set my editor and git editor
export EDITOR=vim
export GIT_EDITOR=vim

# Configure the current git user on shell startup.
if [[ -f "$SQUARE_HOME/config_files/square/bash_profile" ]]; then
  _pair_startup
fi

# Defining this here as well as bashrc because of the way I use iTerm
# to load different shells.
pathadd() {
  if [ -d "$1" ] && [[ ":$path:" != *":$1:"* ]]; then
    path="${path:+"$path:"}$1"
  fi
}

# Print the current git author when the shell loads
if [[ -n $(which git) ]]; then
  printf "${COLOR_LIGHT_CYAN}Current git author:${COLOR_WHITE} ${GIT_AUTHOR_NAME:-$(git config user.name)} <${GIT_AUTHOR_EMAIL:-$(git config user.email)}>\n${COLOR_NC}"
fi

source ~/code/dotfiles/bash/base.theme.bash
source ~/code/dotfiles/bash/colors.theme.bash
source ~/code/dotfiles/bash/ianc.theme.bash

if [[ -f "/usr/local/etc/bash_completion" ]]; then
  source /usr/local/etc/bash_completion
else
  if [[ -d "/usr/local/etc/bash_completion.d" ]]; then
    BASH_COMPLETION_DIR=/usr/local/etc/bash_completion.d
  elif [[ -d "/etc/bash_completion.d" ]]; then
    BASH_COMPLETION_DIR=/etc/bash_completion.d
  fi
  if ! [[ -z "$BASH_COMPLETION_DIR" ]]; then
    for f in ${BASH_COMPLETION_DIR}/*; do
      source $f
    done
  fi
fi

# Go
export GOPATH="${HOME}/code/go"
if [[ -d "${HOME}/Development/config_files/config/go/aliases" ]]; then
  export GOFETCH_ALIASES="${HOME}/Development/config_files/config/go/aliases"
fi
pathadd $GOPATH/bin

alias gpoh='git push origin HEAD'
alias brake='bundle exec rake'

source ~/code/dotfiles/bash/aliases

SSH_ENV="$HOME/.ssh/environment"

function start_agent {
  echo "Initialising new SSH agent..."
  /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
  echo succeeded
  chmod 600 "${SSH_ENV}"
  . "${SSH_ENV}" > /dev/null
  /usr/bin/ssh-add;
}

# Source SSH settings, if applicable
if [[ $(uname) != "Darwin" ]]; then
  if [ -f "${SSH_ENV}" ]; then
    . "${SSH_ENV}" > /dev/null
    #ps ${SSH_AGENT_PID} doesn't work under cywgin
    ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
    start_agent;
  }
  else
    start_agent;
  fi
fi

# vim: filetype=sh
pathadd /usr/local/sbin
export PATH

# List tmux sessions
TMUX_SESSIONS=$(tmux ls 2>/dev/null)
if ! [[ -z "$TMUX_SESSIONS" ]]; then
  echo "---------- tmux sessions ----------"
  tmux ls
  echo "-----------------------------------"
fi

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
# If chruby, set a default ruby so we're not using system ruby
if [[ -f "/usr/local/opt/chruby/share/chruby/chruby.sh" ]]; then
  source /usr/local/opt/chruby/share/chruby/chruby.sh
  source /usr/local/opt/chruby/share/chruby/auto.sh
  chruby 2.3
fi
export GOFETCH_ALIASES=/Users/ianc/Development/config_files/config/go/aliases
export PATH=/usr/local/go/bin:$PATH
export PATH=/usr/local/opt/go/libexec/bin:$PATH

# Opt out of Homebrew analytics
export HOMEBREW_NO_ANALYTICS=1
