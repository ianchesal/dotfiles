#!/usr/bin/env bash

##############################################################
# Bootstrap my work environment
##############################################################


# Set my editor and git editor
export EDITOR=vim
export GIT_EDITOR=vim

# Defining this here as well as bashrc because of the way I use iTerm
# to load different shells.
pathadd() {
  if [ -d "$1" ] && [[ ":$path:" != *":$1:"* ]]; then
    path="${path:+"$path:"}$1"
  fi
}

source ~/code/dotfiles/bash/colors.theme.bash
source ~/code/dotfiles/bash/pure.theme.bash
#source ~/code/dotfiles/bash/ianc.theme.bash

if [[ -f "/usr/local/etc/bash_completion" ]]; then
  source /usr/local/etc/bash_completion
else
  if [[ -d "/usr/local/etc/bash_completion.d" ]]; then
    BASH_COMPLETION_DIR=/usr/local/etc/bash_completion.d
  elif [[ -d "/etc/bash_completion.d" ]]; then
    BASH_COMPLETION_DIR=/etc/bash_completion.d
  fi
  if ! [[ -z "$BASH_COMPLETION_DIR" ]]; then
    for f in ${BASH_COMPLETION_DIR}/*; do
      source $f
    done
  fi
fi

# ~/.local support
pathadd "${HOME}/.local/bin"

# Go
export GOPATH="${HOME}/code/go"
pathadd $GOPATH/bin

alias gpoh='git push origin HEAD'
alias brake='bundle exec rake'

source ~/code/dotfiles/bash/aliases

SSH_ENV="$HOME/.ssh/environment"

function start_agent {
  echo "Initialising new SSH agent..."
  /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
  echo succeeded
  chmod 600 "${SSH_ENV}"
  . "${SSH_ENV}" > /dev/null
  /usr/bin/ssh-add;
}

# Source SSH settings, if applicable
if [[ $(uname) != "Darwin" ]]; then
  if [ -f "${SSH_ENV}" ]; then
    . "${SSH_ENV}" > /dev/null
    #ps ${SSH_AGENT_PID} doesn't work under cywgin
    ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
    start_agent;
  }
  else
    start_agent;
  fi
fi

# vim: filetype=sh
pathadd /usr/local/sbin
export PATH

# List tmux sessions
TMUX_SESSIONS=$(tmux ls 2>/dev/null)
if ! [[ -z "$TMUX_SESSIONS" ]]; then
  echo "---------- tmux sessions ----------"
  tmux ls
  echo "-----------------------------------"
fi

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
# If chruby, set a default ruby so we're not using system ruby
if [[ -f "/usr/local/opt/chruby/share/chruby/chruby.sh" ]]; then
  source /usr/local/opt/chruby/share/chruby/chruby.sh
  source /usr/local/opt/chruby/share/chruby/auto.sh
  chruby 2.4
fi
export PATH=/usr/local/go/bin:$PATH
export PATH=/usr/local/opt/go/libexec/bin:$PATH

# Perl
if [[ -f "/usr/local/bin/perl" ]]; then
  export PERL_MB_OPT="--install_base \"/Users/ianc/.perl5\""
  export PERL_MM_OPT="INSTALL_BASE=/Users/ianc/.perl5"
  export PERL5LIB=${HOME}/.perl5/lib/perl5
fi

# Hub
if [[ -f "/usr/local/bin/hub" ]]; then
  eval "$(hub alias -s)"
fi

# Bat: https://github.com/sharkdp/bat#configuration-file
export BAT_CONFIG_PATH="~/code/dotfiles/bat/bat.conf"

# Opt out of Homebrew analytics
export HOMEBREW_NO_ANALYTICS=1
# Cleanup on install
export HOMEBREW_INSTALL_CLEANUP=1
# Cask options
export HOMEBREW_CASK_OPTS="--appdir=~/Applications"

export GOROOT=/usr/local/opt/go/libexec
